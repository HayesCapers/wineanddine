extends layout

block styles

	link(rel="stylesheet" href="/stylesheets/bootstrap.min.css")
	link(rel='stylesheet' href='/stylesheets/recipe-styles.css')

block scripts

	script(src='javascripts/scripts.js')

block content

	include slider
	-if ((sessionInfo.loggedin !== true) || (sessionInfo == undefined))
		include logreg

	.toggle-button
	#site
		#search-page.section.active
			.slide
				.container
					.row
						.col-sm-6.random-wrapper
							.col-sm-3.col-sm-offset-9.inner
								form.random-form(action="/random-recipe" method="post")
									button.btn-search.btn(type="submit" id="random-button") Random
			.slide
				#recipeForm
					h3.message= message
					form(action='/recipeform' method='post')
						.inclusion
							label.including Ingredients You Have:
							textarea.full(placeholder='Ingredients' rows='2' name='includingingredients')
						.exclusion
							label.excluding Ingredients To Exclude:
							textarea.full(placeholder='Ingredients' rows='2' name='excludingingredients')
						.cuisine
							label.cuisines Cuisines
							select.full(name='cuisine')
								option(value='') Select An Option
								-for(let i = 0; i < cuisines.length; i++)
									option(value = cuisinesSearch[i]) #{cuisines[i]}
						.diet
							label.diets Diets
							select.full(name='diet')
								option(value='') Select An Option
								-for(let i = 0; i< diets.length; i++)
									option(value = dietsSearch[i]) #{diets[i]}
						.allergy
							label.allergies Allergies
							select.full(name='allergy')
								option(value='') Select An Option
								-for(let i=0; i < allergies.length; i++)
									option(value = allergiesSearch[i]) #{allergies[i]}
						button.btn-recipeSearch.full(type='submit') Search

		-if (typeof(recipes) != 'undefined')
			-for (let i = 0; i < recipes.length; i++)
				.section.results

					.container.results-container.col-sm-12

						.col-sm-12.side-bar-wrapper
							.col-sm-6
								.row
									.col-sm-12.side-bar-header
										h1 #{recipes[i].name}
								.row
									.col-sm-12.recipe-pic
										-if (typeof(recipes[i].images[0].imageUrlBySize) !== 'undefined')
											img(src=recipes[i].images[0].imageUrlBySize[360])
										-else
											img(src=recipes[i].images[0].hostedLargeUrl)
							.col-sm-6.ingredient-wrapper
								.col-sm-12.ingredient-list
									-for (let j = 0; j < recipes[i].ingredientLines.length; j++)
										.row(class='row' + j)
											li #{recipes[i].ingredientLines[j]}

						// .col-sm-12.picture-wrapper
						// 	.col-sm-5.col-sm-offset-5.recipe-button-wrapper
						// 		a(href=recipes[i].source.sourceRecipeUrl)
						// 			button.btn.btn-primary Instructions
						// 		button.btn.btn-success Save Recipe	
							
								
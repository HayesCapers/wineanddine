extends layout

block styles
	link(rel="stylesheet" href="stylesheets/restaurant.css")

block scripts 


block content


		h1 RESTAURANTS IN YOUR AREA 
		#demo
			body
				#map	

				script(type='text/javascript').
					//- #{console.log(nearbyResArray)}
					//- #{console.log(nearbyResArray[0].name)}
					console.log("cats")
					var nearbyResArray2 = !{JSON.stringify(nearbyResArray)}
					var nearbyResArray = nearbyResArray2
					console.log(nearbyResArray);
					var map;
					var centerPoint = {lat: Number(nearbyResArray[0].location.latitude), lng: Number(nearbyResArray[0].location.longitude)}
					function initMap(){
						map = new google.maps.Map(document.getElementById('map'), {
							center: centerPoint,
							zoom: 12
					});		

					dropMarker()	

					};
					var markers = [];
					function dropMarker(){
						var infoWindow = new google.maps.InfoWindow(), marker, i;
						for(let i = 0; i < nearbyResArray.length; i++){
							var marker = new google.maps.Marker({
								position: {lat: Number(nearbyResArray[i].location.latitude), lng:Number(nearbyResArray[i].location.longitude)},
								animation: google.maps.Animation.DROP,
								map: map,
							 	title: nearbyResArray[i].name,
							 	cuisines: nearbyResArray[i].cuisines,
							 	address: nearbyResArray[i].location.address,
							 	rating: nearbyResArray[i].user_rating.aggregate_rating,
							 	cost: nearbyResArray[i].price_range,
							 	url: nearbyResArray[i].url
							 	
							});
							//- console.log(nearbyResArray[i].name)
							infoWindow.setContent(nearbyResArray[i].name);
							markers.push(marker);
							console.log(markers[i].position)
							//- console.log(typeof(Number(nearbyResArray[i].location.latitude)))
							//- console.log(Number(nearbyResArray[i].location.longitude))
							//- console.log(markers)
							for(let j = 0; j < markers.length; j++){
								markers[j].addListener('click', function() {
									infoWindow.open(map, markers[j]);
									infoWindow.setContent("<p>" + markers[j].address + "<br />" + 
									"cuisine: " + markers[j].cuisines + "<br />" + "rating(out of 5): " + markers[j].rating + "<br />" + "price range: " + markers[j].cost + "<br />" + markers[j].url + "</p>");
									});	
								}		

							}
						}	

					
					
					$(document).ready(function(){	
						var x = document.getElementById("demo");
						//- var x = $('#demo')
						function getLocation() {
							if (navigator.geolocation){
								navigator.geolocation.getCurrentPosition(showPosition)
							}else {
								x.innerHTML = "Geolocation is not supported by this browser."
							}
							
						}		

						function showPosition(position){
							x.innerHTML = "Latitude: " + position.coords.latitude + "<br>Longitude: " + position.coords.longitude;
						}		

						getLocation();		

								

			
							

					

							

						
						})
				script(src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDMhTz95_uN41xRrxZK4wxovk9VOE0KAcI&callback=initMap" async defer)	
	

				-for(let i = 0; i < nearbyResArray.length; i++)
					h3= nearbyResArray[i].name
					h4= nearbyResArray[i].cuisines
					h5= nearbyResArray[i].location.address
					h5= nearbyResArray[i].location.locality_verbose
					h5= nearbyResArray[i].location.latitude
					h5= nearbyResArray[i].location.longitude
					h5= nearbyResArray[i].url
	 
	


